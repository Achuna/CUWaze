from dijkstar import Graph, find_path
import cv2
from dijkstar import Graph, find_path
import math
import geocoder


# start, end, (walk = 0, run = 1)
def findPath(userLocation, userDestination, speed=0, heuristicSwitch=False):
    invalidLocation = False
    travelTime = ""
    image = cv2.imread("cuamap.png")  # original image file

    # Color list
    blue = (255, 0, 0)
    red = (0, 0, 255)
    green = (0, 255, 0)
    violet = (180, 0, 180)
    yellow = (0, 255, 255)
    black = (0, 0, 0)
    orange = (0, 165, 255)
    white = (255, 255, 255)

    # Fonts
    font = cv2.FONT_HERSHEY_PLAIN
    fontScale = 2

    # All the nodes
    nodes = [(168, 756, 0, [(0, 1, 60), (0, 37, 40)], "O'Boyle"),
             (168, 880, 1, [(1, 2, 53), (1, 0, 65), (1, 3, 38), (1, 4, 53), (1, 6, 48)]),
             (96, 880, 2, [(2, 1, 53)], "Nugent Hall"),
             (237, 880, 3, [(3, 1, 36), (3, 33, 43)], "Marian Scholasticate"),
             (161, 984, 4, [(4, 1, 53), (4, 5, 25), (4, 6, 16)], "Hartke Theatre"),
             (173, 1036, 5, [(5, 4, 25), (5, 7, 38), (5, 32, 92), (5, 6, 30)]),
             (187, 966, 6, [(6, 4, 16), (6, 1, 48), (6, 5, 30)], "Curley Hall"),
             (175, 1106, 7, [(7, 5, 38), (7, 8, 22), (7, 9, 22), (7, 11, 64), (7, 10, 25)]),
             (229, 1092, 8, [(8, 7, 22), (8, 9, 13), (8, 32, 84)], "Salve Regina"),
             (231, 1120, 9, [(9, 7, 22), (9, 8, 13), (9, 16, 62), (9, 30, 66)], "Caldwell Hall"),
             (150, 1130, 10, [(10, 7, 25), (10, 11, 65)], "Leahy Hall"),
             (203, 1254, 11, [(11, 10, 65), (11, 7, 64), (11, 14, 22), (11, 15, 26), (11, 13, 63), (11, 12, 23)]),
             (234, 1308, 12, [(12, 11, 23), (12, 13, 60), (12, 17, 106), (12, 15, 24), (12, 27, 61), (12, 40, 70)]),
             (114, 1302, 13, [(13, 12, 60), (13, 11, 63)], "Ward Hall"),
             (234, 1239, 14, [(14, 11, 22), (14, 15, 18)], "Seton Wing"),
             (274, 1251, 15, [(15, 11, 26), (15, 14, 18), (15, 12, 24), (15, 16, 40), (15, 29, 52)]),
             (286, 1174, 16, [(16, 15, 40), (16, 9, 62)], "McMahon Parking Lot"),
             (285, 1504, 17, [(17, 12, 106), (17, 18, 97), (17, 19, 36), (17, 23, 33), (17, 40, 39)]),
             (294, 1672, 18, [(18, 17, 97), (18, 20, 92), (18, 119, 44)], "Gibbons Hall"),
             (229, 1504, 19, [(19, 17, 35)], "Basilica"),
             (461, 1617, 20, [(20, 18, 92), (20, 112, 37), (20, 118, 39)], "Father O'Connell"),
             (
             467, 1503, 21, [(21, 22, 28), (21, 112, 27), (21, 25, 29), (21, 26, 29), (21, 113, 28)], "Mullen Library"),
             (413, 1503, 22, [(22, 21, 28), (22, 117, 13), (22, 115, 13), (22, 23, 27), (22, 25, 13), (22, 26, 13)]),
             (353, 1503, 23, [(23, 17, 33), (23, 22, 27), (23, 24, 36), (23, 27, 78), (23, 115, 22)]),
             (354, 1569, 24, [(24, 23, 36), (24, 118, 27), (24, 119, 25)]),
             (413, 1474, 25, [(25, 22, 13), (25, 21, 29), (25, 113, 31)], "Shahan Hall (front)"),
             (413, 1527, 26, [(26, 22, 13), (26, 21, 29), (26, 112, 28), (26, 117, 9)], "McGivney Hall"),
             (347, 1353, 27,
              [(27, 12, 61), (27, 23, 78), (27, 115, 75), (27, 28, 10), (27, 40, 48), (27, 92, 65), (27, 116, 30)]),
             (358, 1322, 28, [(28, 27, 11)], "McMahon Hall"),
             (373, 1297, 29, [(29, 15, 52), (29, 89, 38), (29, 91, 57)]),
             (376, 1120, 30, [(30, 89, 49), (30, 9, 66), (30, 31, 25)], "Hannan Hall"),
             (373, 1095, 31, [(31, 30, 25), (31, 32, 40), (31, 41, 24)]),
             (373, 1021, 32, [(32, 31, 40), (32, 8, 81), (32, 5, 92), (32, 33, 72), (32, 45, 32)]),
             (373, 878, 33, [(33, 32, 72), (33, 3, 42), (33, 34, 43), (33, 35, 62), (33, 56, 74)]),
             (402, 821, 34, [(34, 33, 45), (34, 35, 39)], "Aquinas Hall"),
             (373, 769, 35, [(35, 34, 37), (35, 33, 60), (35, 36, 23), (35, 39, 49)]),
             (329, 763, 36, [(36, 35, 23), (36, 37, 58)], "Marist Hall"),
             (273, 735, 37, [(37, 36, 54), (37, 0, 40), (37, 38, 51)]),
             (306, 669, 38, [(38, 37, 51), (38, 39, 31), (38, 129, 18)], "Marist Annex"),
             (381, 669, 39, [(39, 38, 31), (39, 35, 49), (39, 129, 31)]),
             (291, 1428, 40, [(40, 12, 70), (40, 27, 48), (40, 17, 39)]),
             (417, 1083, 41, [(41, 31, 24), (41, 42, 20)]),
             (437, 1049, 42, [(42, 41, 20), (42, 43, 4), (42, 44, 19), (42, 45, 22), (42, 53, 43)]),
             (410, 1050, 43, [(43, 42, 4)], "Engelhard House"),
             (463, 1061, 44, [(44, 42, 19), (44, 53, 24), (44, 45, 21)], "Unanue House"),
             (451, 1019, 45, [(45, 32, 32), (45, 42, 22), (45, 46, 21), (45, 44, 21)]),
             (456, 984, 46, [(46, 45, 21), (46, 47, 25), (46, 48, 24), (46, 49, 20)]),
             (413, 979, 47, [(47, 46, 25), (47, 48, 22)], "Quinn House"),
             (421, 942, 48, [(48, 47, 22), (48, 46, 24), (48, 50, 15), (48, 49, 27)], "Reardon House"),
             (476, 944, 49, [(49, 46, 20), (49, 50, 13), (49, 51, 18), (49, 55, 16), (49, 48, 27)]),
             (453, 922, 50, [(50, 48, 15), (50, 49, 13)], "Camalier House"),
             (495, 971, 51, [(51, 49, 18), (51, 52, 20)], "Walton House"),
             (510, 1005, 52, [(52, 51, 20), (52, 53, 13), (52, 54, 16)]),
             (514, 1039, 53, [(53, 52, 13), (53, 54, 16), (53, 42, 43), (53, 44, 24)]),
             (545, 1011, 54, [(54, 53, 16), (54, 52, 16)], "McDonald House"),
             (496, 899, 55, [(55, 49, 18), (55, 56, 29), (55, 79, 96)]),
             (517, 851, 56, [(56, 55, 31), (56, 57, 20), (56, 58, 26), (56, 33, 76)]),
             (548, 872, 57, [(57, 56, 20), (57, 59, 22)], "Kane Student Health Center"),
             (547, 807, 58, [(58, 56, 28), (58, 60, 20)]),
             (587, 860, 59, [(59, 57, 22), (59, 60, 43), (59, 64, 18), (59, 66, 19)], "Kane Student Fitness Center"),
             (569, 779, 60, [(60, 58, 21), (60, 59, 42), (60, 61, 21), (60, 63, 18)]),
             (580, 734, 61, [(61, 60, 21), (61, 62, 51), (61, 63, 13), (61, 122, 56)], "Flather Hall"),
             (571, 698, 62, [(62, 61, 49), (62, 122, 70)], "Opus Hall"),
             (593, 760, 63, [(63, 61, 13), (63, 60, 18), (63, 64, 56), (63, 70, 15)]),
             (609, 857, 64, [(64, 63, 56), (64, 59, 20), (64, 65, 20), (64, 67, 30)]),
             (620, 905, 65, [(65, 64, 20), (65, 66, 17), (65, 67, 30), (65, 77, 22)]),
             (593, 905, 66, [(66, 65, 17), (66, 59, 19), (66, 77, 25), (66, 79, 65)]),
             (675, 877, 67,
              [(67, 64, 30), (67, 65, 30), (67, 68, 33), (67, 75, 35), (67, 74, 35), (67, 73, 18), (67, 69, 31),
               (67, 72, 30), (67, 71, 35)], "St. Vincent de Paul Chapel"),
             (639, 823, 68, [(68, 67, 33), (68, 69, 10), (68, 70, 33)], "Regan Hall"),
             (669, 819, 69, [(69, 68, 10), (69, 67, 31), (69, 70, 33), (69, 74, 24)], "Millennium North"),
             (632, 759, 70, [(70, 68, 33), (70, 69, 33), (70, 63, 15), (70, 122, 38)]),
             (662, 941, 71, [(71, 67, 35), (71, 72, 34), (71, 76, 38)], "Ryan Hall"),
             (685, 936, 72, [(72, 71, 34), (72, 75, 10), (72, 76, 36), (72, 67, 30)], "Millennium South"),
             (719, 871, 73, [(73, 67, 18), (73, 74, 30), (73, 75, 30)]),
             (713, 835, 74, [(74, 73, 30), (74, 67, 35), (74, 69, 24), (74, 122, 58)]),
             (724, 900, 75, [(75, 67, 35), (75, 73, 30), (75, 72, 10), (75, 123, 80)]),
             (675, 1019, 76, [(76, 72, 36), (76, 71, 38), (76, 78, 16), (76, 81, 16)]),
             (628, 957, 77, [(77, 65, 22), (77, 66, 27), (77, 79, 54), (77, 78, 38)]),
             (639, 1020, 78, [(78, 77, 38), (78, 76, 16), (78, 79, 29)]),
             (593, 1015, 79, [(79, 78, 29), (79, 77, 54), (79, 55, 96), (79, 80, 33), (79, 66, 65)]),
             (577, 1085, 80, [(80, 79, 35), (80, 82, 73), (80, 83, 50), (80, 86, 18)]),
             (707, 1016, 81, [(81, 76, 16), (81, 82, 36)]),
             (719, 1066, 82, [(82, 81, 36), (82, 80, 73), (82, 123, 21)]),
             (622, 1181, 83, [(83, 80, 50), (83, 85, 48), (83, 87, 56), (83, 84, 25)]),
             (672, 1163, 84, [(84, 83, 25)], "Columbus School of Law (rear)"),
             (545, 1207, 85, [(85, 83, 47), (85, 86, 38), (85, 87, 41), (85, 88, 35)],
              "Pryzbyla University Center (back)"),
             (521, 1122, 86, [(86, 85, 38), (86, 80, 18)]),
             (570, 1283, 87, [(87, 85, 41), (87, 131, 83), (87, 83, 56), (87, 90, 34), (87, 96, 25)]),
             (482, 1228, 88, [(88, 85, 30), (88, 89, 49), (88, 90, 42)], "Pryzbyla University Center (front)"),
             (378, 1225, 89, [(89, 88, 49), (89, 30, 49), (89, 29, 38)]),
             (510, 1299, 90, [(90, 87, 32), (90, 88, 42), (90, 96, 24), (90, 100, 67), (90, 91, 16)]),
             (455, 1313, 91, [(91, 90, 16), (91, 29, 57), (91, 93, 39), (91, 94, 40), (91, 96, 41)]),
             (448, 1424, 92, [(92, 27, 65), (92, 93, 19), (92, 94, 44), (92, 114, 17), (92, 95, 37), (92, 113, 19)]),
             (476, 1394, 93, [(93, 91, 39), (93, 92, 19), (93, 94, 38), (93, 95, 29)]),
             (436, 1353, 94, [(94, 91, 40), (94, 92, 44), (94, 93, 38)]),
             (513, 1439, 95, [(95, 92, 37), (95, 93, 29), (95, 99, 54), (95, 100, 22)]),
             (553, 1328, 96, [(96, 91, 40), (96, 87, 25), (96, 90, 25)],
              "Crough Center for Architectural Studies (back)"),
             (620, 1444, 97, [(97, 131, 16), (97, 98, 10), (97, 99, 28), (97, 101, 23)]),
             (595, 1448, 98, [(98, 97, 10), (98, 99, 20)], "Crough Center for Architectural Studies (front)"),
             (603, 1482, 99,
              [(99, 98, 20), (99, 97, 28), (99, 95, 55), (99, 100, 45), (99, 111, 63), (99, 110, 29), (99, 101, 19),
               (99, 108, 46)]),
             (555, 1434, 100, [(100, 90, 67), (100, 95, 22), (100, 99, 42)]),
             (644, 1468, 101, [(101, 97, 23), (101, 99, 19), (101, 102, 13), (101, 103, 25)]),
             (653, 1488, 102, [(102, 101, 13)], "McCort-Ward Hall"),
             (685, 1456, 103, [(103, 101, 25), (103, 104, 7), (103, 105, 5), (103, 106, 25)]),
             (681, 1440, 104, [(104, 103, 5)], "Pangborn Hall"),
             (690, 1472, 105, [(105, 103, 6)], "Nursing-Biology Building"),
             (724, 1445, 106, [(106, 103, 25), (106, 107, 10), (106, 128, 33)]),
             (732, 1460, 107, [(107, 106, 9)], "Gowan Hall"),
             (656, 1565, 108, [(108, 99, 46), (108, 109, 21), (108, 110, 39)]),
             (718, 1559, 109, [(109, 108, 21), (109, 134, 50)], "Maloney Hall"),
             (604, 1531, 110, [(110, 108, 39), (110, 99, 29), (110, 111, 47)]),
             (503, 1561, 111, [(111, 110, 47), (111, 99, 60), (111, 112, 23)]),
             (464, 1559, 112, [(112, 111, 23), (112, 21, 27), (112, 20, 37), (112, 26, 28)]),
             (459, 1453, 113, [(113, 92, 19), (113, 25, 31), (113, 21, 28)]),
             (417, 1430, 114, [(114, 92, 17), (114, 116, 16)], "Shahan Hall (back)"),
             (393, 1480, 115, [(115, 22, 13), (115, 27, 75), (115, 116, 43), (115, 23, 22), (115, 117, 19)]),
             (396, 1398, 116, [(116, 114, 16), (116, 27, 30), (116, 115, 43)]),
             (394, 1527, 117, [(117, 115, 19), (117, 26, 9), (117, 22, 13), (117, 118, 44)]),
             (393, 1608, 118, [(118, 117, 44), (118, 24, 27), (118, 20, 39), (118, 119, 19)]),
             (354, 1622, 119, [(119, 118, 19), (119, 24, 25), (119, 18, 44)]),
             (629, 250, 120, [(120, 122, 236), (120, 121, 73)]),
             (563, 139, 121, [(121, 120, 73)], "DuFour Athletic Center"),
             (697, 708, 122, [(122, 74, 58), (122, 61, 56), (122, 120, 236), (122, 62, 70), (122, 70, 38)]),
             (762, 1073, 123, [(123, 75, 80), (123, 82, 21), (123, 124, 39), (123, 125, 55)]),
             (745, 1141, 124, [(124, 123, 39), (124, 125, 25)], "Columbus School of Law (front)"),
             (785, 1185, 125, [(125, 124, 25), (125, 123, 55), (125, 126, 62)]),
             (794, 1301, 126, [(126, 125, 62), (126, 127, 15), (126, 128, 67)]),
             (755, 1293, 127, [(127, 126, 15)], "Power Plant"),
             (791, 1439, 128, [(128, 126, 67), (128, 106, 35), (128, 133, 60), (128, 134, 65)]),
             (325, 625, 129, [(129, 39, 31), (129, 38, 18), (129, 130, 96)]),
             (135, 592, 130, [(130, 129, 96)], "Facilities Grounds Center"),
             (613, 1402, 131, [(131, 87, 83), (131, 97, 16), (131, 132, 24)]),
             (637, 1393, 132, [(132, 131, 28)], "Pangborn Hall (rear)"),
             (837, 1488, 133, [(133, 128, 60)], "Metro Station"),
             (789, 1539, 134, [(134, 128, 65), (134, 109, 50)])
             ]

    # Associated Geographical Coordinates (latitude, longitude)
    coordinates = [(38.938335, -77.001555),
                   (38.937505, -77.001403),
                   (38.937444, -77.002234),
                   (38.937624, -77.000750),
                   (38.936782, -77.001325),
                   (38.936481, -77.001212),
                   (38.936977, -77.001169),
                   (38.935978, -77.000977),
                   (38.936041, -77.000740),
                   (38.935900, -77.000731),
                   (38.935806, -77.001216),
                   (38.935010, -77.000695),
                   (38.934704, -77.000380),
                   (38.934724, -77.001382),
                   (38.935170, -77.000397),
                   (38.935125, -77.000091),
                   (38.935655, -77.000100),
                   (38.933482, -76.999650),
                   (38.932317, -76.999436),
                   (38.933411, -77.000260),
                   (38.932852, -76.998036),
                   (38.933627, -76.998188),
                   (38.933573, -76.998671),
                   (38.933533, -76.999141),
                   (38.933072, -76.999049),
                   (38.933742, -76.998694),
                   (38.933424, -76.998651),
                   (38.934435, -76.999398),
                   (38.934586, -76.999361),
                   (38.934869, -76.999295),
                   (38.935918, -76.999263),
                   (38.936188, -76.999439),
                   (38.936745, -76.999524),
                   (38.937671, -76.999773),
                   (38.938068, -76.999546),
                   (38.938448, -76.999864),
                   (38.938519, -77.000268),
                   (38.938524, -77.000943),
                   (38.939018, -77.000488),
                   (38.939074, -76.999944),
                   (38.933963, -76.999742),
                   (38.936327, -76.999150),
                   (38.936560, -76.999056),
                   (38.936576, -76.999187),
                   (38.936464, -76.998781),
                   (38.936803, -76.998978),
                   (38.937102, -76.998981),
                   (38.937038, -76.999269),
                   (38.937385, -76.999352),
                   (38.937382, -76.998810),
                   (38.937531, -76.999084),
                   (38.937262, -76.998594),
                   (38.937030, -76.998474),
                   (38.936814, -76.998364),
                   (38.936995, -76.998176),
                   (38.937646, -76.998724),
                   (38.937918, -76.998642),
                   (38.937902, -76.998279),
                   (38.938313, -76.998409),
                   (38.937985, -76.998001),
                   (38.938531, -76.998268),
                   (38.938835, -76.998141),
                   (38.939314, -76.998391),
                   (38.938720, -76.998029),
                   (38.938043, -76.997809),
                   (38.937750, -76.997658),
                   (38.937710, -76.997864),
                   (38.937975, -76.997325),
                   (38.938319, -76.997614),
                   (38.938370, -76.997429),
                   (38.938758, -76.997788),
                   (38.937561, -76.997310),
                   (38.937594, -76.997082),
                   (38.938076, -76.996912),
                   (38.938441, -76.997062),
                   (38.937746, -76.996783),
                   (38.937112, -76.997112),
                   (38.937490, -76.997578),
                   (38.937058, -76.997355),
                   (38.936840, -76.997755),
                   (38.936432, -76.997816),
                   (38.937181, -76.996895),
                   (38.936698, -76.996641),
                   (38.935830, -76.997382),
                   (38.936029, -76.996942),
                   (38.935609, -76.997964),
                   (38.936069, -76.998230),
                   (38.935157, -76.997660),
                   (38.935451, -76.998456),
                   (38.935372, -76.999099),
                   (38.934987, -76.998147),
                   (38.934855, -76.998369),
                   (38.934111, -76.998470),
                   (38.934281, -76.998285),
                   (38.934592, -76.998695),
                   (38.934094, -76.997914),
                   (38.934846, -76.997689),
                   (38.934193, -76.997039),
                   (38.934140, -76.997253),
                   (38.933908, -76.997101),
                   (38.934224, -76.997613),
                   (38.934013, -76.996813),
                   (38.933907, -76.996612),
                   (38.934141, -76.996469),
                   (38.934244, -76.996541),
                   (38.934001, -76.996420),
                   (38.934260, -76.996160),
                   (38.934105, -76.996040),
                   (38.933387, -76.996686),
                   (38.933476, -76.996143),
                   (38.933620, -76.997078),
                   (38.933325, -76.997782),
                   (38.933313, -76.998166),
                   (38.933959, -76.998382),
                   (38.934057, -76.998745),
                   (38.933689, -76.998839),
                   (38.934223, -76.998923),
                   (38.933435, -76.998791),
                   (38.932882, -76.998713),
                   (38.932765, -76.999006),
                   (38.941937, -76.998508),
                   (38.942702, -76.999217),
                   (38.939121, -76.997339),
                   (38.936490, -76.996246),
                   (38.936196, -76.996420),
                   (38.936007, -76.996032),
                   (38.935279, -76.995846),
                   (38.935297, -76.996099),
                   (38.934409, -76.995664),
                   (38.939249, -77.000459),
                   (38.939421, -77.002050),
                   (38.934275, -76.997017),
                   (38.934339, -76.996790),
                   (38.933817, -76.995019),
                   (38.933620, -76.995485)
                   ]

    # Extract location names and place them in array
    locations = []
    for node in nodes:
        try:
            if node[4] is not None: locations.append((node[4], node[2]))  # append location and internal node index
        except:
            continue
    locations.sort()

    # TO BE UPDATED: Blockage reports go here:
    blockageNodes = [(5, 32, True), (77, 78, True)]  # (A, B, Boolean) blockage edge and drawLine
    longTermBlockages = [(524, 1064, 15, True)]  # (X, Y, radius, Boolean)

    # inserting edges into graph
    edges = []
    for node in nodes:
        for i in range(0, len(node[3])):
            begin = node[3][i][0]
            end = node[3][i][1]
            # All possible node pairing combination
            nodePair1 = (begin, end, True)
            nodePair2 = (end, begin, True)
            nodePair3 = (begin, end, False)
            nodePair4 = (end, begin, False)

            # Make sure blockages are excluded
            if (nodePair4 not in blockageNodes) and (nodePair3 not in blockageNodes) and (
                    nodePair2 not in blockageNodes) and (nodePair1 not in blockageNodes):
                edges.append(node[3][i])

    graph = Graph()

    def distanceToGoal(x1, y1, x2, y2):
        return math.sqrt(((x2 - x1) ** 2) + ((y2 - y1) ** 2))

    startNode = 0
    if(userLocation != -1):
        startNode = locations[userLocation - 1][1]
    else:
        g = geocoder.ip('me')
        results = g.latlng
        lat = results[0]
        lon = results[1]
        print((lat, lon))
        closestNodeDis = 0.004 #max geographical distance within campus bounds
        closestNodeIndex = 0
        for i in range(0, len(coordinates)):
            dis = distanceToGoal(lat, lon, coordinates[i][0], coordinates[i][1])
            if dis < closestNodeDis:
                closestNodeDis = dis
                closestNodeIndex = i
        if closestNodeDis >= 0.004:
            invalidLocation = True
        else:
            startNode = closestNodeIndex
    goalNode = locations[userDestination - 1][1]

    # insert all edges into the graph
    for i in range(0, len(edges)):
        graph.add_edge(int(edges[i][0]), int(edges[i][1]), int(edges[i][2]))



    #F = G + H (G - edge weight, H - heuristic cost: this case is distance formula, F - heuristic total weight)
    def heuristic(v, d, e, prev_e):
        cost = e + distanceToGoal(nodes[v][0], nodes[v][1], nodes[d][0], nodes[d][1])
        return cost

    travelTime = ""
    # retrieve path information after executing dijkstra algorithm
    if not invalidLocation:
        try:
            pathInfoAll = []
            if heuristicSwitch:
                pathInfoAll = find_path(graph, startNode, goalNode, heuristic_func=heuristic)
            else:
                pathInfoAll = find_path(graph, startNode, goalNode)

            # format time properly
            totalTime = pathInfoAll[3]

            if speed != 0: totalTime = round((totalTime*0.8), 2)  # add multiplier to imply running

            if totalTime / 60 < 1:
                #print("Total Time: " + str(totalTime) + " secs")
                travelTime = "Travel Time: %s secs" % totalTime
            else:
                totalTime = round((totalTime / 60), 2)
                #print("Total Time: " + str(totalTime) + " mins")
                travelTime = "Travel Time: %s mins" % totalTime

            # store node information to path here
            pathInfo = pathInfoAll[0]
            #print(pathInfo)

            # Print out map legend in top right hand corner
            cv2.putText(image, travelTime, (655, 131), font, 1.3, black, 2)
            cv2.circle(image, (695, 160), 10, blue, -1)
            cv2.putText(image, " : Pathway", (705, 165), font, 1, black, 2)
            cv2.circle(image, (695, 190), 10, red, -1)
            cv2.putText(image, " : Intersection", (705, 195), font, 1, black, 2)
            cv2.circle(image, (695, 220), 10, green, -1)
            cv2.putText(image, " : Building", (705, 225), font, 1, black, 2)
            cv2.circle(image, (695, 250), 10, orange, -1)
            cv2.putText(image, " : Temporary Blockage", (705, 255), font, 1, black, 2)
            cv2.circle(image, (695, 280), 10, yellow, -1)
            cv2.putText(image, " : Long-term Blockage", (705, 285), font, 1, black, 2)
            # Start and End labels
            cv2.putText(image, "START", (nodes[pathInfo[0]][0] + 5, nodes[pathInfo[0]][1] - 10), font, fontScale, violet, 2)
            cv2.putText(image, "END", (nodes[pathInfo[-1]][0] + 5, nodes[pathInfo[-1]][1] + 20), font, fontScale, violet, 2)

            # Draw lines on map
            for index, path in enumerate(pathInfo):
                try:
                    cv2.line(image, (nodes[path][0], nodes[path][1]),
                             (nodes[pathInfo[index + 1]][0], nodes[pathInfo[index + 1]][1]), blue, thickness=3)
                except:
                    continue
                    #print("Done")

            # Draw Blockage points
            for node in blockageNodes:
                if node[2]:
                    cv2.line(image, (nodes[node[0]][0], nodes[node[0]][1]), (nodes[node[1]][0], nodes[node[1]][1]), orange,
                             thickness=10)
                else:
                    cv2.line(image, (nodes[node[0]][0], nodes[node[0]][1]), (nodes[node[1]][0], nodes[node[1]][1]), white,
                             thickness=1)
            for node in longTermBlockages:
                if node[3]:
                    cv2.circle(image, (node[0], node[1]), node[2], yellow, -1)

            # Draw points on map
            for index, path in enumerate(pathInfo):
                try:
                    if nodes[path][4] is not None:
                        cv2.circle(image, (nodes[path][0], nodes[path][1]), 5, green, -1)
                except:
                    cv2.circle(image, (nodes[path][0], nodes[path][1]), 5, red, -1)

            # save image
            cv2.imwrite("pathFind.png", image)
        except:
            print("NO PATH FOUND")
    cv2.imwrite("pathFind.png", image)
    return travelTime


nodes = [(168, 756, 0, [(0, 1, 60), (0, 37, 40)], "O'Boyle"),
         (168, 880, 1, [(1, 2, 53), (1, 0, 65), (1, 3, 38), (1, 4, 53), (1, 6, 48)]),
         (96, 880, 2, [(2, 1, 53)], "Nugent Hall"),
         (237, 880, 3, [(3, 1, 36), (3, 33, 43)], "Marian Scholasticate"),
         (161, 984, 4, [(4, 1, 53), (4, 5, 25), (4, 6, 16)], "Hartke Theatre"),
         (173, 1036, 5, [(5, 4, 25), (5, 7, 38), (5, 32, 92), (5, 6, 30)]),
         (187, 966, 6, [(6, 4, 16), (6, 1, 48), (6, 5, 30)], "Curley Hall"),
         (175, 1106, 7, [(7, 5, 38), (7, 8, 22), (7, 9, 22), (7, 11, 64), (7, 10, 25)]),
         (229, 1092, 8, [(8, 7, 22), (8, 9, 13), (8, 32, 84)], "Salve Regina"),
         (231, 1120, 9, [(9, 7, 22), (9, 8, 13), (9, 16, 62), (9, 30, 66)], "Caldwell Hall"),
         (150, 1130, 10, [(10, 7, 25), (10, 11, 65)], "Leahy Hall"),
         (203, 1254, 11, [(11, 10, 65), (11, 7, 64), (11, 14, 22), (11, 15, 26), (11, 13, 63), (11, 12, 23)]),
         (234, 1308, 12, [(12, 11, 23), (12, 13, 60), (12, 17, 106), (12, 15, 24), (12, 27, 61), (12, 40, 70)]),
         (114, 1302, 13, [(13, 12, 60), (13, 11, 63)], "Ward Hall"),
         (234, 1239, 14, [(14, 11, 22), (14, 15, 18)], "Seton Wing"),
         (274, 1251, 15, [(15, 11, 26), (15, 14, 18), (15, 12, 24), (15, 16, 40), (15, 29, 52)]),
         (286, 1174, 16, [(16, 15, 40), (16, 9, 62)], "McMahon Parking Lot"),
         (285, 1504, 17, [(17, 12, 106), (17, 18, 97), (17, 19, 36), (17, 23, 33), (17, 40, 39)]),
         (294, 1672, 18, [(18, 17, 97), (18, 20, 92), (18, 119, 44)], "Gibbons Hall"),
         (229, 1504, 19, [(19, 17, 35)], "Basilica"),
         (461, 1617, 20, [(20, 18, 92), (20, 112, 37), (20, 118, 39)], "Father O'Connell"),
         (467, 1503, 21, [(21, 22, 28), (21, 112, 27), (21, 25, 29), (21, 26, 29), (21, 113, 28)], "Mullen Library"),
         (413, 1503, 22, [(22, 21, 28), (22, 117, 13), (22, 115, 13), (22, 23, 27), (22, 25, 13), (22, 26, 13)]),
         (353, 1503, 23, [(23, 17, 33), (23, 22, 27), (23, 24, 36), (23, 27, 78), (23, 115, 22)]),
         (354, 1569, 24, [(24, 23, 36), (24, 118, 27), (24, 119, 25)]),
         (413, 1474, 25, [(25, 22, 13), (25, 21, 29), (25, 113, 31)], "Shahan Hall (front)"),
         (413, 1527, 26, [(26, 22, 13), (26, 21, 29), (26, 112, 28), (26, 117, 9)], "McGivney Hall"),
         (347, 1353, 27, [(27, 12, 61), (27, 23, 78), (27, 115, 75), (27, 28, 10), (27, 40, 48), (27, 92, 65), (27, 116, 30)]),
         (358, 1322, 28, [(28, 27, 11)], "McMahon Hall"),
         (373, 1297, 29, [(29, 15, 52), (29, 89, 38), (29, 91, 57)]),
         (376, 1120, 30, [(30, 89, 49), (30, 9, 66), (30, 31, 25)], "Hannan Hall"),
         (373, 1095, 31, [(31, 30, 25), (31, 32, 40), (31, 41, 24)]),
         (373, 1021, 32, [(32, 31, 40), (32, 8, 81), (32, 5, 92), (32, 33, 72), (32, 45, 32)]),
         (373, 878, 33, [(33, 32, 72), (33, 3, 42), (33, 34, 43), (33, 35, 62), (33, 56, 74)]),
         (402, 821, 34, [(34, 33, 45), (34, 35, 39)], "Aquinas Hall"),
         (373, 769, 35, [(35, 34, 37), (35, 33, 60), (35, 36, 23), (35, 39, 49)]),
         (329, 763, 36, [(36, 35, 23), (36, 37, 58)], "Marist Hall"),
         (273, 735, 37, [(37, 36, 54), (37, 0, 40), (37, 38, 51)]),
         (306, 669, 38, [(38, 37, 51), (38, 39, 31), (38, 129, 18)], "Marist Annex"),
         (381, 669, 39, [(39, 38, 31), (39, 35, 49), (39, 129, 31)]),
         (291, 1428, 40, [(40, 12, 70), (40, 27, 48), (40, 17, 39)]),
         (417, 1083, 41, [(41, 31, 24), (41, 42, 20)]),
         (437, 1049, 42, [(42, 41, 20), (42, 43, 4), (42, 44, 19), (42, 45, 22), (42, 53, 43)]),
         (410, 1050, 43, [(43, 42, 4)], "Engelhard House"),
         (463, 1061, 44, [(44, 42, 19), (44, 53, 24), (44, 45, 21)], "Unanue House"),
         (451, 1019, 45, [(45, 32, 32), (45, 42, 22), (45, 46, 21), (45, 44, 21)]),
         (456, 984, 46, [(46, 45, 21), (46, 47, 25), (46, 48, 24), (46, 49, 20)]),
         (413, 979, 47, [(47, 46, 25), (47, 48, 22)], "Quinn House"),
         (421, 942, 48, [(48, 47, 22), (48, 46, 24), (48, 50, 15), (48, 49, 27)], "Reardon House"),
         (476, 944, 49, [(49, 46, 20), (49, 50, 13), (49, 51, 18), (49, 55, 16), (49, 48, 27)]),
         (453, 922, 50, [(50, 48, 15), (50, 49, 13)], "Camalier House"),
         (495, 971, 51, [(51, 49, 18), (51, 52, 20)], "Walton House"),
         (510, 1005, 52, [(52, 51, 20), (52, 53, 13), (52, 54, 16)]),
         (514, 1039, 53, [(53, 52, 13), (53, 54, 16), (53, 42, 43), (53, 44, 24)]),
         (545, 1011, 54, [(54, 53, 16), (54, 52, 16)], "McDonald House"),
         (496, 899, 55, [(55, 49, 18), (55, 56, 29), (55, 79, 96)]),
         (517, 851, 56, [(56, 55, 31), (56, 57, 20), (56, 58, 26), (56, 33, 76)]),
         (548, 872, 57, [(57, 56, 20), (57, 59, 22)], "Kane Student Health Center"),
         (547, 807, 58, [(58, 56, 28), (58, 60, 20)]),
         (587, 860, 59, [(59, 57, 22), (59, 60, 43), (59, 64, 18), (59, 66, 19)], "Kane Student Fitness Center"),
         (569, 779, 60, [(60, 58, 21), (60, 59, 42), (60, 61, 21), (60, 63, 18)]),
         (580, 734, 61, [(61, 60, 21), (61, 62, 51), (61, 63, 13), (61, 122, 56)], "Flather Hall"),
         (571, 698, 62, [(62, 61, 49), (62, 122, 70)], "Opus Hall"),
         (593, 760, 63, [(63, 61, 13), (63, 60, 18), (63, 64, 56), (63, 70, 15)]),
         (609, 857, 64, [(64, 63, 56), (64, 59, 20), (64, 65, 20), (64, 67, 30)]),
         (620, 905, 65, [(65, 64, 20), (65, 66, 17), (65, 67, 30), (65, 77, 22)]),
         (593, 905, 66, [(66, 65, 17), (66, 59, 19), (66, 77, 25), (66, 79, 65)]),
         (675, 877, 67,
          [(67, 64, 30), (67, 65, 30), (67, 68, 33), (67, 75, 35), (67, 74, 35), (67, 73, 18), (67, 69, 31), (67, 72, 30), (67, 71, 35)], "St. Vincent de Paul Chapel"),
         (639, 823, 68, [(68, 67, 33), (68, 69, 10), (68, 70, 33)], "Regan Hall"),
         (669, 819, 69, [(69, 68, 10), (69, 67, 31), (69, 70, 33), (69, 74, 24)], "Millennium North"),
         (632, 759, 70, [(70, 68, 33), (70, 69, 33), (70, 63, 15), (70, 122, 38)]),
         (662, 941, 71, [(71, 67, 35), (71, 72, 34), (71, 76, 38)], "Ryan Hall"),
         (685, 936, 72, [(72, 71, 34), (72, 75, 10), (72, 76, 36), (72, 67, 30)], "Millennium South"),
         (719, 871, 73, [(73, 67, 18), (73, 74, 30), (73, 75, 30)]),
         (713, 835, 74, [(74, 73, 30), (74, 67, 35), (74, 69, 24), (74, 122, 58)]),
         (724, 900, 75, [(75, 67, 35), (75, 73, 30), (75, 72, 10), (75, 123, 80)]),
         (675, 1019, 76, [(76, 72, 36), (76, 71, 38), (76, 78, 16), (76, 81, 16)]),
         (628, 957, 77, [(77, 65, 22), (77, 66, 27), (77, 79, 54), (77, 78, 38)]),
         (639, 1020, 78, [(78, 77, 38), (78, 76, 16), (78, 79, 29)]),
         (593, 1015, 79, [(79, 78, 29), (79, 77, 54), (79, 55, 96), (79, 80, 33), (79, 66, 65)]),
         (577, 1085, 80, [(80, 79, 35), (80, 82, 73), (80, 83, 50), (80, 86, 18)]),
         (707, 1016, 81, [(81, 76, 16), (81, 82, 36)]),
         (719, 1066, 82, [(82, 81, 36), (82, 80, 73), (82, 123, 21)]),
         (622, 1181, 83, [(83, 80, 50), (83, 85, 48), (83, 87, 56), (83, 84, 25)]),
         (672, 1163, 84, [(84, 83, 25)], "Columbus School of Law (rear)"),
         (545, 1207, 85, [(85, 83, 47), (85, 86, 38), (85, 87, 41), (85, 88, 35)], "Pryzbyla University Center (back)"),
         (521, 1122, 86, [(86, 85, 38), (86, 80, 18)]),
         (570, 1283, 87, [(87, 85, 41), (87, 131, 83), (87, 83, 56), (87, 90, 34), (87, 96, 25)]),
         (482, 1228, 88, [(88, 85, 30), (88, 89, 49), (88, 90, 42)], "Pryzbyla University Center (front)"),
         (378, 1225, 89, [(89, 88, 49), (89, 30, 49), (89, 29, 38)]),
         (510, 1299, 90, [(90, 87, 32), (90, 88, 42), (90, 96, 24), (90, 100, 67), (90, 91, 16)]),
         (455, 1313, 91, [(91, 90, 16), (91, 29, 57), (91, 93, 39), (91, 94, 40), (91, 96, 41)]),
         (448, 1424, 92, [(92, 27, 65), (92, 93, 19), (92, 94, 44), (92, 114, 17), (92, 95, 37), (92, 113, 19)]),
         (476, 1394, 93, [(93, 91, 39), (93, 92, 19), (93, 94, 38), (93, 95, 29)]),
         (436, 1353, 94, [(94, 91, 40), (94, 92, 44), (94, 93, 38)]),
         (513, 1439, 95, [(95, 92, 37), (95, 93, 29), (95, 99, 54), (95, 100, 22)]),
         (553, 1328, 96, [(96, 91, 40), (96, 87, 25), (96, 90, 25)], "Crough Center for Architectural Studies (back)"),
         (620, 1444, 97, [(97, 131, 16), (97, 98, 10), (97, 99, 28), (97, 101, 23)]),
         (595, 1448, 98, [(98, 97, 10), (98, 99, 20)], "Crough Center for Architectural Studies (front)"),
         (603, 1482, 99,
          [(99, 98, 20), (99, 97, 28), (99, 95, 55), (99, 100, 45), (99, 111, 63), (99, 110, 29), (99, 101, 19), (99, 108, 46)]),
         (555, 1434, 100, [(100, 90, 67), (100, 95, 22), (100, 99, 42)]),
         (644, 1468, 101, [(101, 97, 23), (101, 99, 19), (101, 102, 13), (101, 103, 25)]),
         (653, 1488, 102, [(102, 101, 13)], "McCort-Ward Hall"),
         (685, 1456, 103, [(103, 101, 25), (103, 104, 7), (103, 105, 5), (103, 106, 25)]),
         (681, 1440, 104, [(104, 103, 5)], "Pangborn Hall"),
         (690, 1472, 105, [(105, 103, 6)], "Nursing-Biology Building"),
         (724, 1445, 106, [(106, 103, 25), (106, 107, 10), (106, 128, 33)]),
         (732, 1460, 107, [(107, 106, 9)], "Gowan Hall"),
         (656, 1565, 108, [(108, 99, 46), (108, 109, 21), (108, 110, 39)]),
         (718, 1559, 109, [(109, 108, 21), (109, 134, 50)], "Maloney Hall"),
         (604, 1531, 110, [(110, 108, 39), (110, 99, 29), (110, 111, 47)]),
         (503, 1561, 111, [(111, 110, 47), (111, 99, 60), (111, 112, 23)]),
         (464, 1559, 112, [(112, 111, 23), (112, 21, 27), (112, 20, 37), (112, 26, 28)]),
         (459, 1453, 113, [(113, 92, 19), (113, 25, 31), (113, 21, 28)]),
         (417, 1430, 114, [(114, 92, 17), (114, 116, 16)], "Shahan Hall (back)"),
         (393, 1480, 115, [(115, 22, 13), (115, 27, 75), (115, 116, 43), (115, 23, 22), (115, 117, 19)]),
         (396, 1398, 116, [(116, 114, 16), (116, 27, 30), (116, 115, 43)]),
         (394, 1527, 117, [(117, 115, 19), (117, 26, 9), (117, 22, 13), (117, 118, 44)]),
         (393, 1608, 118, [(118, 117, 44), (118, 24, 27), (118, 20, 39), (118, 119, 19)]),
         (354, 1622, 119, [(119, 118, 19), (119, 24, 25), (119, 18, 44)]),
         (629, 250, 120, [(120, 122, 236), (120, 121, 73)]),
         (563, 139, 121, [(121, 120, 73)], "DuFour Athletic Center"),
         (697, 708, 122, [(122, 74, 58), (122, 61, 56), (122, 120, 236), (122, 62, 70), (122, 70, 38)]),
         (762, 1073, 123, [(123, 75, 80), (123, 82, 21), (123, 124, 39), (123, 125, 55)]),
         (745, 1141, 124, [(124, 123, 39), (124, 125, 25)], "Columbus School of Law (front)"),
         (785, 1185, 125, [(125, 124, 25), (125, 123, 55), (125, 126, 62)]),
         (794, 1301, 126, [(126, 125, 62), (126, 127, 15), (126, 128, 67)]),
         (755, 1293, 127, [(127, 126, 15)], "Power Plant"),
         (791, 1439, 128, [(128, 126, 67), (128, 106, 35), (128, 133, 60), (128, 134, 65)]),
         (325, 625, 129, [(129, 39, 31), (129, 38, 18), (129, 130, 96)]),
         (135, 592, 130, [(130, 129, 96)], "Facilities Grounds Center"),
         (613, 1402, 131, [(131, 87, 83), (131, 97, 16), (131, 132, 24)]),
         (637, 1393, 132, [(132, 131, 28)], "Pangborn Hall (rear)"),
         (837, 1488, 133, [(133, 128, 60)], "Metro Station"),
         (789, 1539, 134, [(134, 128, 65), (134, 109, 50)])
         ]

locations = []

for node in nodes:
    try:
        if node[4] is not None: locations.append((node[4], node[2]))
    except:
        continue
locations.append(("Your Location (-1)", -1))
locations.sort()
print("List of Locations:\n")
for index, loc in enumerate(locations):
    print(str(index + 1) + ") " + loc[0])

print("\nPath Finder Testing\n")
location = int(input("Enter Location: "))
destination = int(input("Enter Destination: "))

print(findPath(location, destination, 0, True))
